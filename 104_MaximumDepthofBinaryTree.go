
/***********************************************************************************************************
*执行用时：4 ms, 在所有 Go 提交中击败了89.58%的用户
*内存消耗：4.5 MB, 在所有 Go 提交中击败了31.27%的用户
************************************************************************************************************
*/

/***********************************************************************************************************
给定一个二叉树，找出其最大深度。

二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。

说明: 叶子节点是指没有子节点的节点。
************************************************************************************************************
*/


//递归
/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
 func maxDepth(root *TreeNode) int {

    if root == nil {
        return 0;
    } else {
        left := maxDepth(root.Left)
        right := maxDepth(root.Right)

        if left > right {
            return left + 1
        } else { 
            return right +1
        }

    }

}