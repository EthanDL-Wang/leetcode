/***********************************************************************************************************
*执行用时：8 ms, 在所有 Go 提交中击败了86.79%的用户
*内存消耗：3.9 MB, 在所有 Go 提交中击败了54.24%的用户
************************************************************************************************************
*/

/***********************************************************************************************************
在一个 m*n 的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于 0）。你可以从棋盘的左上角开始拿格子里的礼物，并每次向右或者向下移动一格、直到到达棋盘的右下角。给定一个棋盘及其上面的礼物的价值，请计算你最多能拿到多少价值的礼物？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
************************************************************************************************************
*/

func maxValue(grid [][]int) int {

    m := len(grid)
    n := len(grid[0])

    buff := make([]int, n)


    buff[0] = grid[0][0]
    for i := 1; i < n; i++ {
        buff[i] = buff[i-1]+grid[0][i]
    }

    for i := 1; i < m; i++ {
        buff[0] += grid[i][0]
        for j := 1; j < n; j++ {
            if buff[j-1] < buff[j] {
                buff[j] += grid[i][j]
            } else {
                buff[j] = buff[j-1] + grid[i][j]
            }
        }
    }

    answer := buff[n-1]
    return answer

}