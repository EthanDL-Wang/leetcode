/***********************************************************************************************************
*执行用时：16 ms, 在所有 Go 提交中击败了92.86%的用户
*内存消耗：5.9 MB, 在所有 Go 提交中击败了77.68%的用户
************************************************************************************************************
*/

/***********************************************************************************************************
在柠檬水摊上，每一杯柠檬水的售价为 5 美元。

顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。

每位顾客只买一杯柠檬水，然后向你付 5 美元、10 美元或 20 美元。你必须给每个顾客正确找零，也就是说净交易是每位顾客向你支付 5 美元。

注意，一开始你手头没有任何零钱。

如果你能给每位顾客正确找零，返回 true ，否则返回 false 。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/lemonade-change
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
************************************************************************************************************
*/


func lemonadeChange(bills []int) bool {

    count := make([]int, 3)

    for _, v := range bills {

        if v == 5 {
            count[0]++
        } else if v == 10 {
            if count[0] > 0 {
                count[0]--
                count[1]++
            } else {
                return false
            }
        } else if v == 20 {
            if count[0] > 0 {
                
                if count[1] > 0 {
                    count[0]--
                    count[1]--
                    count[2]++
                } else {
                    if count[0] > 2 {
                        count[0] -= 3
                        count[2]++
                    } else {
                        return false
                    }
                }
            } else {
                return false
            }
        }

    }

    return true


}