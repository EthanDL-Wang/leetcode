/***********************************************************************************************************
*执行用时：16 ms, 在所有 Go 提交中击败了98.82%的用户
*内存消耗：6.7 MB, 在所有 Go 提交中击败了7.94%的用户
*1.元素作为key，出现次数作为value，保存到map
*2.遍历map，找到answer
************************************************************************************************************
*/

/***********************************************************************************************************
*数组中占比超过一半的元素称之为主要元素。给定一个整数数组，找到它的主要元素。若没有，返回-1。                                                
************************************************************************************************************
*/

func majorityElement(nums []int) int {

    var answer int = -1
    len := len(nums)
    buffMap := make(map[int]int, len)

    for _,v := range nums {
        buffMap[v]++
    }

    for k, v := range buffMap {

        if len%2 == 0 {
            if v >= len/2 {
                answer = k
                break
            }            
        } else {
            if v > len/2 {
                answer = k
                break
            }
        }


    }    

    return answer
}