/***********************************************************************************************************
*执行用时：4 ms, 在所有 Go 提交中击败了85.89%的用户
*内存消耗：4.4 MB, 在所有 Go 提交中击败了96.55%的用户
*1.最小翻转次数，就看target内元素，有0变为1，和由1变为0的次数。
*2.值得注意的是，首元素为0，需减一
************************************************************************************************************
*/

/***********************************************************************************************************
房间中有 n 个灯泡，编号从 0 到 n-1 ，自左向右排成一行。最开始的时候，所有的灯泡都是 关 着的。

请你设法使得灯泡的开关状态和 target 描述的状态一致，其中 target[i] 等于 1 第 i 个灯泡是开着的，等于 0 意味着第 i 个灯是关着的。

有一个开关可以用于翻转灯泡的状态，翻转操作定义如下：

选择当前配置下的任意一个灯泡（下标为 i ）
翻转下标从 i 到 n-1 的每个灯泡
翻转时，如果灯泡的状态为 0 就变为 1，为 1 就变为 0 。

返回达成 target 描述的状态所需的 最少 翻转次数。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/bulb-switcher-iv
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
************************************************************************************************************
*/

func minFlips(target string) int {

    var count int 
    var led byte 
    len := len(target)

    led = target[0]

    if led == '1' {
        count = 1
    }


    for i := 1; i < len; i++ {

        if led != byte(target[i]) {
            count++
            if led == '0' {
                led = '1'
            } else {
                led = '0'
            }
        }

    } 

    return count

}