/***********************************************************************************************************
*执行用时：20 ms, 在所有 Go 提交中击败了100.00%的用户
*内存消耗：6.7 MB, 在所有 Go 提交中击败了100.00%的用户
************************************************************************************************************
*/

/***********************************************************************************************************
给你一个大小为 rows x cols 的矩阵 mat，其中 mat[i][j] 是 0 或 1，请返回 矩阵 mat 中特殊位置的数目 。

特殊位置 定义：如果 mat[i][j] == 1 并且第 i 行和第 j 列中的所有其他元素均为 0（行和列的下标均 从 0 开始 ），则位置 (i, j) 被称为特殊位置。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/special-positions-in-a-binary-matrix
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
************************************************************************************************************
*/


func numSpecial(mat [][]int) int {

    var count int

    row := len(mat)
    col := len(mat[0])

    for i := 0; i < row; i++ {

        tmpCount := 0
        index := 0

        for j := 0; j < col; j++ {
            if mat[i][j] == 1 {
                tmpCount++
                index = j
            }
            if tmpCount > 1 {
                break
            }
        }        
        
        if tmpCount != 1 {
            continue
        }
        
        tmpCount = 0
        for k := 0; k < row; k++ {
            if mat[k][index] == 1 {
                tmpCount++
            }
        }

        if tmpCount == 1 {
            count++
        }

        
        //fmt.Println(count)
    }

    return count
}